from aiogram import Router, types
from aiogram.filters import CommandStart
from asgiref.sync import sync_to_async

from services.crypto import CompactReferralCipher
from services.models import operations
from ..keyboards.user import reply as user_reply, inline as user_inline
from ..keyboards.admin import reply as admin_reply, inline as admin_inline

main = Router()

#
# @main.message(CommandStart(deep_link=True))
# async def start_handler(message: types.Message, command: CommandStart):
#     user_id = message.from_user.id
#     username = message.from_user.username or "–ì–æ—Å—Ç—å"
#     referral_code = command.args
#
#     ref_by = None
#     if referral_code:
#         try:
#             ref_by = CompactReferralCipher().decrypt_id(referral_code)
#             if ref_by is None:
#                 await message.answer("‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π –∏–ª–∏ –ø–æ–≤—Ä–µ–∂–¥–µ–Ω–Ω—ã–π —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—ã–π –∫–æ–¥.")
#             elif ref_by == user_id:
#                 await message.answer("–í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Å–≤–æ—é —Å–æ–±—Å—Ç–≤–µ–Ω–Ω—É—é —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—É—é —Å—Å—ã–ª–∫—É.")
#                 ref_by = None
#             else:
#                 await message.answer(f"–í—ã –ø—Ä–∏—à–ª–∏ –ø–æ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–π —Å—Å—ã–ª–∫–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {ref_by}")
#         except Exception as e:
#             await message.answer("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–∞—Å—à–∏—Ñ—Ä–æ–≤–∫–µ –∫–æ–¥–∞.")
#             print(f"[REFERRAL ERROR] '{referral_code}': {e}")
#     else:
#         await message.answer("üëã –ü—Ä–∏–≤–µ—Ç! –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å!")
#
#     user = await sync_to_async(operations.get_or_create_tg_user)(user_id, ref_by=ref_by)
#
#     if await sync_to_async(operations.is_admin)(user_id):
#         await message.answer("–í—ã –≤–æ—à–ª–∏ –∫–∞–∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä", reply_markup=admin_reply.main_menu())
#         return
#
#     await message.answer(f"–ü—Ä–∏–≤–µ—Ç, {username}!", reply_markup=user_reply.main_menu())


@main.message(CommandStart())
async def start_handler(message: types.Message, command: CommandStart):
    user_id = message.from_user.id
    username = message.from_user.username or "–ì–æ—Å—Ç—å"
    referral_code = command.args

    ref_by = None
    if referral_code:
        try:
            ref_by = CompactReferralCipher().decrypt_id(referral_code)
            if ref_by is None:
                await message.answer("‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π –∏–ª–∏ –ø–æ–≤—Ä–µ–∂–¥–µ–Ω–Ω—ã–π —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—ã–π –∫–æ–¥.")
            elif ref_by == user_id:
                await message.answer("–í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Å–≤–æ—é —Å–æ–±—Å—Ç–≤–µ–Ω–Ω—É—é —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—É—é —Å—Å—ã–ª–∫—É.")
                ref_by = None
            else:
                await message.answer(f"–í—ã –ø—Ä–∏—à–ª–∏ –ø–æ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–π —Å—Å—ã–ª–∫–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {ref_by}")
        except Exception as e:
            await message.answer("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–∞—Å—à–∏—Ñ—Ä–æ–≤–∫–µ –∫–æ–¥–∞.")
            print(f"[REFERRAL ERROR] '{referral_code}': {e}")
    else:
        await message.answer("üëã –ü—Ä–∏–≤–µ—Ç! –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å!")

    user = await sync_to_async(operations.get_or_create_tg_user)(user_id, ref_by)
    await message.answer(str(user))

    if await sync_to_async(operations.is_admin)(user_id):
        await message.answer("–í—ã –≤–æ—à–ª–∏ –∫–∞–∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä", reply_markup=admin_reply.main_menu())
        return

    await message.answer(f"–ü—Ä–∏–≤–µ—Ç, {username}!", reply_markup=user_reply.main_menu())

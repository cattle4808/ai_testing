from aiogram import Router
from aiogram import F, types
from asgiref.sync import sync_to_async
from django.conf import settings

from ..keyboards.user import inline as user_inline, reply as user_reply
from ..keyboards.admin import inline as admin_inline, reply as admin_reply
from .. import CommandMap

from services.models import operations
from services.models import refferal

user = Router()
@user.message(F.text == CommandMap.User.BUY_SCRIPT)
async def buy_script(message: types.Message):
    await message.answer(
        "<b>üíº –ü–æ–∫—É–ø–∫–∞ —Ä–µ—à–µ–Ω–∏—è ‚Äî –±—ã—Å—Ç—Ä–æ –∏ –Ω–∞–¥—ë–∂–Ω–æ</b>\n\n"
        "<b>1Ô∏è‚É£ –í—ã–±–µ—Ä–∏—Ç–µ –¥–∞—Ç—É –∏ –≤—Ä–µ–º—è —Ç–µ—Å—Ç–∞</b>\n"
        "–£–∫–∞–∂–∏—Ç–µ –∑–∞—Ä–∞–Ω–µ–µ, —á—Ç–æ–±—ã –º—ã –≤—Å—ë –ø–æ–¥–≥–æ—Ç–æ–≤–∏–ª–∏.\n\n"
        "<b>2Ô∏è‚É£ –û–ø–ª–∞—Ç–∏—Ç–µ –∑–∞–∫–∞–∑</b>\n"
        "–ú—ã –ø—Ä–∏–Ω–∏–º–∞–µ–º –æ–ø–ª–∞—Ç—É –∏ —Å—Ä–∞–∑—É –Ω–∞—á–∏–Ω–∞–µ–º —Ä–∞–±–æ—Ç—É.\n\n"
        "<b>3Ô∏è‚É£ –ü–æ–ª—É—á–∏—Ç–µ —Ä–µ—à–µ–Ω–∏–µ —á–µ—Ä–µ–∑ AFT</b>\n"
        "–¢–æ—á–Ω–æ –≤ –Ω—É–∂–Ω–æ–µ –≤—Ä–µ–º—è, –±–µ–∑ –∑–∞–¥–µ—Ä–∂–µ–∫.\n\n"
        "<b>üîê –ú—ã –≥–∞—Ä–∞–Ω—Ç–∏—Ä—É–µ–º:</b>\n"
        "‚Äì –ü–æ–ª–Ω—É—é –∫–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ—Å—Ç—å\n"
        "‚Äì –°–≤–æ–µ–≤—Ä–µ–º–µ–Ω–Ω—É—é –æ—Ç–ø—Ä–∞–≤–∫—É\n"
        "‚Äì –†–∞–±–æ—á–µ–µ –∏ –ø—Ä–æ–≤–µ—Ä–µ–Ω–Ω–æ–µ —Ä–µ—à–µ–Ω–∏–µ",
        reply_markup=user_inline.select_time(),
        parse_mode="HTML"
    )


@user.message(F.text == CommandMap.User.MY_DATA)
async def my_referrals(message: types.Message):
    user_id = message.from_user.id

    referral_link = await sync_to_async(refferal.generate_referral_link)(user_id)
    referral_buys = await sync_to_async(operations.get_referrals_counts)(user_id)
    invited_users = await sync_to_async(operations.get_referrals_inviters)(user_id)

    reward_per_referral = settings.REWERD_PER_REFFERAL
    max_discount = settings.MAX_DISCOUNT

    successful_referrals = len(referral_buys["all"])
    unused_referrals = len(referral_buys["unused"])
    total_discount = unused_referrals * reward_per_referral

    await message.answer(
        "<b>üë• –†–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è –ø—Ä–æ–≥—Ä–∞–º–º–∞</b>\n\n"
        "üí∏ <b>–ó–∞ –∫–∞–∂–¥–æ–≥–æ —á–µ–ª–æ–≤–µ–∫–∞</b>, –∫–æ—Ç–æ—Ä—ã–π —Å–æ–≤–µ—Ä—à–∏—Ç –ø–æ–∫—É–ø–∫—É –ø–æ –≤–∞—à–µ–π —Å—Å—ã–ª–∫–µ, –≤—ã –ø–æ–ª—É—á–∞–µ—Ç–µ "
        f"<b>—Å–∫–∏–¥–∫—É {reward_per_referral:,} —Å—É–º</b>.\n"
        f"üîê <b>–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è —Å–∫–∏–¥–∫–∞</b> –Ω–∞ –æ–¥–Ω—É –ø–æ–∫—É–ø–∫—É ‚Äî <b>{max_discount:,} —Å—É–º</b>.\n\n"
        "üìå <b>–í–∞—à–∞ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è —Å—Å—ã–ª–∫–∞:</b>\n"
        f"{referral_link}\n\n"
        "üìä <b>–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞</b>:\n"
        f"‚Äî –ü—Ä–∏–≥–ª–∞—à–µ–Ω–æ: <b>{len(invited_users)} —á–µ–ª–æ–≤–µ–∫</b>\n"
        f"‚Äî –°–æ–≤–µ—Ä—à–∏–ª–∏ –ø–æ–∫—É–ø–∫—É: <b>{successful_referrals} —á–µ–ª–æ–≤–µ–∫</b>\n"
        f"‚Äî –î–æ—Å—Ç—É–ø–Ω–∞—è —Å–∫–∏–¥–∫–∞: <b>{unused_referrals} / {total_discount:,} —Å—É–º</b>",
        parse_mode="HTML"
    )



@user.message(F.text == CommandMap.User.INSTRUCTION)
async def instruction(message: types.Message):
    await message.answer("–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è")


@user.message(F.text == CommandMap.User.SUPPORT)
async def support(message: types.Message):
    await message.answer(
        "<b>üõ† –°–ª—É–∂–±–∞ –ø–æ–¥–¥–µ—Ä–∂–∫–∏</b>\n\n"
        "–ú—ã —Ü–µ–Ω–∏–º –≤–∞—à–µ –¥–æ–≤–µ—Ä–∏–µ –∏ –≤—Å–µ–≥–¥–∞ –≥–æ—Ç–æ–≤—ã –ø–æ–º–æ—á—å.\n"
        "–ï—Å–ª–∏ —É –≤–∞—Å –≤–æ–∑–Ω–∏–∫–ª–∏ —Å–ª–æ–∂–Ω–æ—Å—Ç–∏ ‚Äî –æ–±—Ä–∞—â–∞–π—Ç–µ—Å—å –Ω–∞–ø—Ä—è–º—É—é. "
        "–ú—ã –æ—Ç–≤–µ—Ç–∏–º –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ –±—ã—Å—Ç—Ä–æ –∏ —Å –∑–∞–±–æ—Ç–æ–π –æ –∫–∞–∂–¥–æ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ.\n\n"
        "üîê <b>–í–∞—à–∞ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å</b> ‚Äî –Ω–∞—à –≥–ª–∞–≤–Ω—ã–π –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç.\n"
        "üéØ <b>–í–∞—à–∞ —É–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å</b> ‚Äî –Ω–∞—à–∞ –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç—å.\n\n",
        parse_mode="HTML",
        reply_markup=user_inline.support()
    )


@user.message(F.text == CommandMap.User.MY_SCRIPTS)
async def my_shops(message: types.Message):
    await message.delete()



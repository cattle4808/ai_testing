import pprint

from aiogram import Router
from aiogram import F, types
from asgiref.sync import sync_to_async
from django.conf import settings
from aiogram.fsm.context import FSMContext


from ..keyboards.user import inline as user_inline, reply as user_reply
from ..keyboards.admin import inline as admin_inline, reply as admin_reply
from .. import CommandMap
from ..fsm.user import UserPaymentCheck
from ..filters import police
from .. import bot

from services.models import operations
from services.models import refferal


user = Router()

@user.message(F.text == CommandMap.User.BUY_SCRIPT, police.HasAcceptedPolicy())
async def buy_script(message: types.Message, state: FSMContext):
    state_name = await state.get_state()
    if state_name == UserPaymentCheck.waiting_for_img:
        try:
            await message.delete()
        except:
            pass

        redis_data = await state.get_data()
        redis_key = redis_data.get("redis_key")

        await message.answer(
            "‚õî –°–Ω–∞—á–∞–ª–∞ –∑–∞–≤–µ—Ä—à–∏—Ç–µ —Ç–µ–∫—É—â—É—é –æ–ø–ª–∞—Ç—É ‚Äî –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Ñ–æ—Ç–æ —á–µ–∫–∞.\n"
            f"–ò–ª–∏ –æ—Ç–º–µ–Ω–∏—Ç–µ –æ–ø–ª–∞—Ç—É",
            reply_markup=user_inline.cancel_keyboard(redis_key)
        )
        return

    await message.answer(
        "<b>üíº –ü–æ–∫—É–ø–∫–∞ —Ä–µ—à–µ–Ω–∏—è ‚Äî –±—ã—Å—Ç—Ä–æ –∏ –Ω–∞–¥—ë–∂–Ω–æ</b>\n\n"
        "<b>1Ô∏è‚É£ –í—ã–±–µ—Ä–∏—Ç–µ –¥–∞—Ç—É –∏ –≤—Ä–µ–º—è —Ç–µ—Å—Ç–∞</b>\n"
        "–£–∫–∞–∂–∏—Ç–µ –∑–∞—Ä–∞–Ω–µ–µ, —á—Ç–æ–±—ã –º—ã –≤—Å—ë –ø–æ–¥–≥–æ—Ç–æ–≤–∏–ª–∏.\n\n"
        "<b>2Ô∏è‚É£ –û–ø–ª–∞—Ç–∏—Ç–µ –∑–∞–∫–∞–∑</b>\n"
        "–ú—ã –ø—Ä–∏–Ω–∏–º–∞–µ–º –æ–ø–ª–∞—Ç—É –∏ —Å—Ä–∞–∑—É –Ω–∞—á–∏–Ω–∞–µ–º —Ä–∞–±–æ—Ç—É.\n\n"
        "<b>3Ô∏è‚É£ –ü–æ–ª—É—á–∏—Ç–µ —Ä–µ—à–µ–Ω–∏–µ —á–µ—Ä–µ–∑ AFT</b>\n"
        "–¢–æ—á–Ω–æ –≤ –Ω—É–∂–Ω–æ–µ –≤—Ä–µ–º—è, –±–µ–∑ –∑–∞–¥–µ—Ä–∂–µ–∫.\n\n"
        "<b>üîê –ú—ã –≥–∞—Ä–∞–Ω—Ç–∏—Ä—É–µ–º:</b>\n"
        "‚Äì –ü–æ–ª–Ω—É—é –∫–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ—Å—Ç—å\n"
        "‚Äì –°–≤–æ–µ–≤—Ä–µ–º–µ–Ω–Ω—É—é –æ—Ç–ø—Ä–∞–≤–∫—É\n"
        "‚Äì –†–∞–±–æ—á–µ–µ –∏ –ø—Ä–æ–≤–µ—Ä–µ–Ω–Ω–æ–µ —Ä–µ—à–µ–Ω–∏–µ",
        reply_markup=user_inline.select_time(),
        parse_mode="HTML"
    )


@user.message(F.text == CommandMap.User.MY_DATA)
async def my_referrals(message: types.Message, state: FSMContext):
    state_name = await state.get_state()
    if state_name == UserPaymentCheck.waiting_for_img:
        try:
            await message.delete()
        except:
            pass

        redis_data = await state.get_data()
        redis_key = redis_data.get("redis_key")

        await message.answer(
            "‚õî –°–Ω–∞—á–∞–ª–∞ –∑–∞–≤–µ—Ä—à–∏—Ç–µ —Ç–µ–∫—É—â—É—é –æ–ø–ª–∞—Ç—É ‚Äî –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Ñ–æ—Ç–æ —á–µ–∫–∞.\n"
            f"–ò–ª–∏ –æ—Ç–º–µ–Ω–∏—Ç–µ –æ–ø–ª–∞—Ç—É",
            reply_markup=user_inline.cancel_keyboard(redis_key)
        )
        return

    user_id = message.from_user.id

    referral_link = await sync_to_async(refferal.generate_referral_link)(user_id)
    referral_buys = await sync_to_async(operations.get_referrals_counts)(user_id)
    invited_users = await sync_to_async(operations.get_referrals_inviters)(user_id)

    reward_per_referral = settings.REWERD_PER_REFFERAL
    max_discount = settings.MAX_DISCOUNT

    successful_referrals = len(referral_buys["all"])
    unused_referrals = len(referral_buys["unused"])
    total_discount = unused_referrals * reward_per_referral

    await message.answer(
        "<b>üë• –†–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è –ø—Ä–æ–≥—Ä–∞–º–º–∞</b>\n\n"
        "üí∏ <b>–ó–∞ –∫–∞–∂–¥–æ–≥–æ —á–µ–ª–æ–≤–µ–∫–∞</b>, –∫–æ—Ç–æ—Ä—ã–π —Å–æ–≤–µ—Ä—à–∏—Ç –ø–æ–∫—É–ø–∫—É –ø–æ –≤–∞—à–µ–π —Å—Å—ã–ª–∫–µ, –≤—ã –ø–æ–ª—É—á–∞–µ—Ç–µ "
        f"<b>—Å–∫–∏–¥–∫—É {reward_per_referral:,} —Å—É–º</b>.\n"
        f"üîê <b>–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è —Å–∫–∏–¥–∫–∞</b> –Ω–∞ –æ–¥–Ω—É –ø–æ–∫—É–ø–∫—É ‚Äî <b>{max_discount:,} —Å—É–º</b>.\n\n"
        "üìå <b>–í–∞—à–∞ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è —Å—Å—ã–ª–∫–∞:</b>\n"
        f"{referral_link}\n\n"
        "üìä <b>–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞</b>:\n"
        f"‚Äî –ü—Ä–∏–≥–ª–∞—à–µ–Ω–æ: <b>{len(invited_users)} —á–µ–ª–æ–≤–µ–∫</b>\n"
        f"‚Äî –°–æ–≤–µ—Ä—à–∏–ª–∏ –ø–æ–∫—É–ø–∫—É: <b>{successful_referrals} —á–µ–ª–æ–≤–µ–∫</b>\n"
        f"‚Äî –î–æ—Å—Ç—É–ø–Ω–∞—è —Å–∫–∏–¥–∫–∞: <b>{unused_referrals} / {total_discount:,} —Å—É–º</b>",
        parse_mode="HTML"
    )



@user.message(F.text == CommandMap.User.INSTRUCTION, police.HasAcceptedPolicy())
async def instruction(message: types.Message, state: FSMContext):
    state_name = await state.get_state()
    if state_name == UserPaymentCheck.waiting_for_img:
        try:
            await message.delete()
        except:
            pass

        redis_data = await state.get_data()
        redis_key = redis_data.get("redis_key")

        await message.answer(
            "‚õî –°–Ω–∞—á–∞–ª–∞ –∑–∞–≤–µ—Ä—à–∏—Ç–µ —Ç–µ–∫—É—â—É—é –æ–ø–ª–∞—Ç—É ‚Äî –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Ñ–æ—Ç–æ —á–µ–∫–∞.\n"
            f"–ò–ª–∏ –æ—Ç–º–µ–Ω–∏—Ç–µ –æ–ø–ª–∞—Ç—É",
            reply_markup=user_inline.cancel_keyboard(redis_key)
        )
        return

    common_instruction = (
        f"üìå <b>–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –ø–æ –∑–∞–ø—É—Å–∫—É —Å–∫—Ä–∏–ø—Ç–∞</b>\n\n"
        f"üîπ <b>–ß—Ç–æ —ç—Ç–æ?</b>\n"
        f"–¢—ã –ø–æ–ª—É—á–∏–ª –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—É—é —Å—Å—ã–ª–∫—É, –∫–æ—Ç–æ—Ä–∞—è –ø–æ–∑–≤–æ–ª—è–µ—Ç –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å –≤—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—ã–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –ø—Ä—è–º–æ –≤ –±—Ä–∞—É–∑–µ—Ä–µ:\n"
        f"<code>javascript:import('//aft.lol/&lt;—Ç–≤–æ–π_–∫–æ–¥&gt;')</code>\n\n"

        f"üîß <b>–ö–∞–∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å:</b>\n"
        f"1. –û—Ç–∫—Ä–æ–π –ª—é–±–æ–π –≤–µ–±-—Å–∞–π—Ç, —Å –∫–æ—Ç–æ—Ä—ã–º —Ç—ã —Å–µ–π—á–∞—Å —Ä–∞–±–æ—Ç–∞–µ—à—å\n"
        f"2. –£–±–µ–¥–∏—Å—å, —á—Ç–æ —Å—Ç—Ä–∞–Ω–∏—Ü–∞ –ø–æ–ª–Ω–æ—Å—Ç—å—é –∑–∞–≥—Ä—É–∑–∏–ª–∞—Å—å\n"
        f"3. –°–∫–æ–ø–∏—Ä—É–π –≤—ã–¥–∞–Ω–Ω—É—é —Å—Å—ã–ª–∫—É –∏ –≤—Å—Ç–∞–≤—å –µ—ë –≤ –∞–¥—Ä–µ—Å–Ω—É—é —Å—Ç—Ä–æ–∫—É –±—Ä–∞—É–∑–µ—Ä–∞ (–Ω–µ –≤ –ø–æ–∏—Å–∫–æ–≤–∏–∫!)\n"
        f"4. –ù–∞–∂–º–∏ Enter ‚Äî —Å–∏—Å—Ç–µ–º–∞ –∞–∫—Ç–∏–≤–∏—Ä—É–µ—Ç –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–π —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª\n\n"

        f"‚öôÔ∏è <b>–¢—Ä–µ–±–æ–≤–∞–Ω–∏—è:</b>\n"
        f"‚Ä¢ –°–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–π –±—Ä–∞—É–∑–µ—Ä (Chrome, Firefox, Edge –Ω–∞ –ü–ö)\n"
        f"‚Ä¢ –°–∫—Ä–∏–ø—Ç –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç –Ω–∞ –º–æ–±–∏–ª—å–Ω—ã—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞—Ö –∏ –≤ Safari\n"

        f"‚ùì <b>–ï—Å–ª–∏ –≤–æ–∑–Ω–∏–∫–ª–∏ –≤–æ–ø—Ä–æ—Å—ã:</b>\n"
        f"‚Ä¢ –ü—Ä–æ–≤–µ—Ä—å, —á—Ç–æ –≤—Å—Ç–∞–≤–ª—è–µ—à—å —Å—Å—ã–ª–∫—É –±–µ–∑ –ø—Ä–æ–±–µ–ª–æ–≤ –∏ –ª–∏—à–Ω–∏—Ö —Å–∏–º–≤–æ–ª–æ–≤\n"
        f"‚Ä¢ –û–±–Ω–æ–≤–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—É –∏ –ø–æ–ø—Ä–æ–±—É–π –µ—â—ë —Ä–∞–∑\n\n"

        f"üì¨ <b>–ü–æ–¥–¥–µ—Ä–∂–∫–∞:</b> <a href='https://t.me/AFT_Admin1'>@AFT_Admin1</a>\n\n"
        f"<i>–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–∞ –¥–ª—è –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ –≤—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω–æ–≥–æ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–Ω–æ–≥–æ —Ä–µ—à–µ–Ω–∏—è.</i>"
    )

    try:
        await bot.send_video(
            chat_id=message.from_user.id,
            video='BAACAgIAAxkBAAIYMmiFwK52pClYD7QkOjurR1mf6bz4AAIzcAACQmcxSFDvFQgTHYzFNgQ',
            caption=common_instruction,
            parse_mode="HTML"
        )
    except Exception as e:
        print(e)


@user.message(F.text == CommandMap.User.SUPPORT, police.HasAcceptedPolicy())
async def support(message: types.Message, state: FSMContext):
    state_name = await state.get_state()
    if state_name == UserPaymentCheck.waiting_for_img:
        try:
            await message.delete()
        except:
            pass

        redis_data = await state.get_data()
        redis_key = redis_data.get("redis_key")

        await message.answer(
            "‚õî –°–Ω–∞—á–∞–ª–∞ –∑–∞–≤–µ—Ä—à–∏—Ç–µ —Ç–µ–∫—É—â—É—é –æ–ø–ª–∞—Ç—É ‚Äî –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Ñ–æ—Ç–æ —á–µ–∫–∞.\n"
            f"–ò–ª–∏ –æ—Ç–º–µ–Ω–∏—Ç–µ –æ–ø–ª–∞—Ç—É",
            reply_markup=user_inline.cancel_keyboard(redis_key)
        )
        return

    await message.answer(
        "<b>üõ† –°–ª—É–∂–±–∞ –ø–æ–¥–¥–µ—Ä–∂–∫–∏</b>\n\n"
        "–ú—ã —Ü–µ–Ω–∏–º –≤–∞—à–µ –¥–æ–≤–µ—Ä–∏–µ –∏ –≤—Å–µ–≥–¥–∞ –≥–æ—Ç–æ–≤—ã –ø–æ–º–æ—á—å.\n"
        "–ï—Å–ª–∏ —É –≤–∞—Å –≤–æ–∑–Ω–∏–∫–ª–∏ —Å–ª–æ–∂–Ω–æ—Å—Ç–∏ ‚Äî –æ–±—Ä–∞—â–∞–π—Ç–µ—Å—å –Ω–∞–ø—Ä—è–º—É—é. "
        "–ú—ã –æ—Ç–≤–µ—Ç–∏–º –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ –±—ã—Å—Ç—Ä–æ –∏ —Å –∑–∞–±–æ—Ç–æ–π –æ –∫–∞–∂–¥–æ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ.\n\n"
        "üîê <b>–í–∞—à–∞ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å</b> ‚Äî –Ω–∞—à –≥–ª–∞–≤–Ω—ã–π –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç.\n"
        "üéØ <b>–í–∞—à–∞ —É–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å</b> ‚Äî –Ω–∞—à–∞ –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç—å.\n\n",
        parse_mode="HTML",
        reply_markup=user_inline.support()
    )


# @user.message(F.text == CommandMap.User.MY_SCRIPTS)
# async def my_shops(message: types.Message, state: FSMContext):
#     state_name = await state.get_state()
#     if state_name == UserPaymentCheck.waiting_for_img:
#         try:
#             await message.delete()
#         except:
#             pass
#
#         redis_data = await state.get_data()
#         redis_key = redis_data.get("redis_key")
#
#         await message.answer(
#             "‚õî –°–Ω–∞—á–∞–ª–∞ –∑–∞–≤–µ—Ä—à–∏—Ç–µ —Ç–µ–∫—É—â—É—é –æ–ø–ª–∞—Ç—É ‚Äî –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Ñ–æ—Ç–æ —á–µ–∫–∞.\n"
#             f"–ò–ª–∏ –æ—Ç–º–µ–Ω–∏—Ç–µ –æ–ø–ª–∞—Ç—É",
#             reply_markup=user_inline.cancel_keyboard(redis_key)
#         )
#         return
#
#     user_id = message.from_user.id
#
#     await message.answer(
#         "<b>üìÇ –ú–æ–∏ —Å–∫—Ä–∏–ø—Ç—ã</b>\n\n"
#         "–ó–¥–µ—Å—å –≤—ã –º–æ–∂–µ—Ç–µ —É–ø—Ä–∞–≤–ª—è—Ç—å —Å–≤–æ–∏–º–∏ —Å–∫—Ä–∏–ø—Ç–∞–º–∏.\n"
#     )
#
#     my_scripts = await sync_to_async(operations.get_my_scripts)(user_id)
#
#     pprint.pprint(my_scripts, indent=4)


